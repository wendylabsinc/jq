{"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"process","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"U","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"filter","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"input","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"outputType","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"U","kind":"typeIdentifier"},{"text":".Type = U.self) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"U","kind":"typeIdentifier"},{"text":"] ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SE","text":"Encodable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"U","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:Se","text":"Decodable","kind":"typeIdentifier"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Jq filter expression.","type":"text"}]}],"name":"filter"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Any "},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":" value that will be encoded to JSON for jq."}]}],"name":"input"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"text":" result type for each jq output value.","type":"text"}]}],"name":"outputType"}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Array of decoded results of type "},{"type":"codeVoice","code":"U"},{"type":"text","text":"."}]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"aside","name":"Throws","content":[{"inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"JQError"},{"text":" plus any decoding errors encountered when constructing ","type":"text"},{"type":"codeVoice","code":"U"},{"text":".","type":"text"}],"type":"paragraph"}],"style":"note"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example:"}]},{"type":"codeListing","syntax":"swift","code":["struct Person: Codable { let name: String; let age: Int }","let people = [Person(name: \"A\", age: 20), Person(name: \"B\", age: 30)]","let names: [String] = try JQ.process(","    filter: \"[.[] | select(.age >= 21) | .name] | .[]\",","    input: people,","    outputType: String.self",")","\/\/ names == [\"B\"]"]}]}],"sections":[],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/jq\/jq\/process(filter:input:outputtype:)"]}],"abstract":[{"type":"text","text":"Apply a jq filter to a Codable input and decode results to a Codable output type."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"modules":[{"name":"JQ"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"process"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"U"},{"kind":"text","text":">("},{"kind":"externalParam","text":"filter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"input"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"externalParam","text":"outputType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"U"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"U"},{"kind":"text","text":"]"}],"extendedModule":"JQ","externalID":"s:2JQAAC7process6filter5input10outputTypeSayq_GSS_xq_mtKSERzSeR_r0_lFZ","symbolKind":"method","roleHeading":"Type Method","title":"process(filter:input:outputType:)","role":"symbol"},"identifier":{"url":"doc:\/\/JQ\/documentation\/JQ\/JQ\/process(filter:input:outputType:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/JQ\/documentation\/JQ","doc:\/\/JQ\/documentation\/JQ\/JQ"]]},"references":{"doc://JQ/documentation/JQ/JQ/process(filter:input:outputType:)":{"identifier":"doc:\/\/JQ\/documentation\/JQ\/JQ\/process(filter:input:outputType:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"process","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"U","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"filter","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"input","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"outputType","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"U","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"U","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"title":"process(filter:input:outputType:)","abstract":[{"type":"text","text":"Apply a jq filter to a Codable input and decode results to a Codable output type."}],"role":"symbol","url":"\/documentation\/jq\/jq\/process(filter:input:outputtype:)","type":"topic","kind":"symbol"},"doc://JQ/documentation/JQ/JQ":{"role":"symbol","title":"JQ","url":"\/documentation\/jq\/jq","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JQ","kind":"identifier"}],"abstract":[{"text":"A lightweight Swift wrapper around the embedded jq C library.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/JQ\/documentation\/JQ\/JQ","navigatorTitle":[{"text":"JQ","kind":"identifier"}]},"doc://JQ/documentation/JQ":{"role":"collection","title":"JQ","url":"\/documentation\/jq","type":"topic","abstract":[{"type":"text","text":"Swift wrapper around the jq JSON processor."}],"kind":"symbol","identifier":"doc:\/\/JQ\/documentation\/JQ"}}}