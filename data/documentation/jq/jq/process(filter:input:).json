{"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/JQ\/documentation\/JQ","doc:\/\/JQ\/documentation\/JQ\/JQ"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"process"},{"kind":"text","text":"("},{"kind":"externalParam","text":"filter"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"input"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ["},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"]"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Jq filter expression (e.g., “.foo”, “.[] | select(.age > 21)”)."}]}],"name":"filter"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"JSON text to process."}]}],"name":"input"}]},{"kind":"content","content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"An array of JSON strings (each element is a single jq output value, encoded as JSON)."}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Thread Safety: This method creates an isolated jq state per call and is safe to call from concurrent tasks."}],"type":"paragraph"}]}],"type":"unorderedList"},{"content":[{"inlineContent":[{"type":"text","text":""},{"code":"JQError","type":"codeVoice"},{"type":"text","text":" if the filter fails to compile, the input is invalid, or execution fails."}],"type":"paragraph"}],"style":"note","name":"Throws","type":"aside"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Each output is a JSON fragment string. For strongly‑typed results, prefer","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/JQ\/documentation\/JQ\/JQ\/process(filter:input:outputType:)","type":"reference","isActive":true},{"text":" which decodes to a ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"text":" type.","type":"text"}]}],"style":"note","name":"Note","type":"aside"},{"inlineContent":[{"type":"text","text":"Example:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let json = \"{\" + \"\\\"nums\\\":[1,2,3,4]}\"","let results = try JQ.process(filter: \".nums[] | select(. % 2 == 0)\", input: json)","\/\/ results == [\"2\", \"4\"]"]}]}],"kind":"symbol","metadata":{"role":"symbol","title":"process(filter:input:)","externalID":"s:2JQAAC7process6filter5inputSaySSGSS_SStKFZ","roleHeading":"Type Method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"process"},{"kind":"text","text":"("},{"kind":"externalParam","text":"filter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"input"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"]"}],"modules":[{"name":"JQ"}],"symbolKind":"method"},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/JQ\/documentation\/JQ\/JQ\/process(filter:input:)"},"abstract":[{"text":"Apply a jq filter to a JSON string.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/jq\/jq\/process(filter:input:)"]}],"references":{"doc://JQ/documentation/JQ":{"role":"collection","title":"JQ","url":"\/documentation\/jq","type":"topic","abstract":[{"type":"text","text":"Swift wrapper around the jq JSON processor."}],"kind":"symbol","identifier":"doc:\/\/JQ\/documentation\/JQ"},"doc://JQ/documentation/JQ/JQ/process(filter:input:)":{"url":"\/documentation\/jq\/jq\/process(filter:input:)","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"process"},{"kind":"text","text":"("},{"kind":"externalParam","text":"filter"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"input"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ["},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"Apply a jq filter to a JSON string."}],"kind":"symbol","title":"process(filter:input:)","role":"symbol","identifier":"doc:\/\/JQ\/documentation\/JQ\/JQ\/process(filter:input:)"},"doc://JQ/documentation/JQ/JQ/process(filter:input:outputType:)":{"identifier":"doc:\/\/JQ\/documentation\/JQ\/JQ\/process(filter:input:outputType:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"process","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"U","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"filter","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"input","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"outputType","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"U","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"U","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"title":"process(filter:input:outputType:)","abstract":[{"type":"text","text":"Apply a jq filter to a Codable input and decode results to a Codable output type."}],"role":"symbol","url":"\/documentation\/jq\/jq\/process(filter:input:outputtype:)","type":"topic","kind":"symbol"},"doc://JQ/documentation/JQ/JQ":{"role":"symbol","title":"JQ","url":"\/documentation\/jq\/jq","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JQ","kind":"identifier"}],"abstract":[{"text":"A lightweight Swift wrapper around the embedded jq C library.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/JQ\/documentation\/JQ\/JQ","navigatorTitle":[{"text":"JQ","kind":"identifier"}]}}}